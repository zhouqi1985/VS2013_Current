//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PuzzleEvent.DAL.WCF.Client.PuzzleEventService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PuzzleEventService.IPuzzleEventService")]
    public interface IPuzzleEventService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleEventService/GetUserPiecesTotalAll", ReplyAction="http://tempuri.org/IPuzzleEventService/GetUserPiecesTotalAllResponse")]
        System.Collections.Generic.List<PuzzleEvent.Database.Database.UserPiecesTotal> GetUserPiecesTotalAll(PuzzleEvent.Database.Database.UserPiecesTotal userpiecestotal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleEventService/AddOrdinaryPacketReceive", ReplyAction="http://tempuri.org/IPuzzleEventService/AddOrdinaryPacketReceiveResponse")]
        int AddOrdinaryPacketReceive(PuzzleEvent.Database.Database.UserSearch ordinaryPacketReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleEventService/AddExchangePacketReceive", ReplyAction="http://tempuri.org/IPuzzleEventService/AddExchangePacketReceiveResponse")]
        int AddExchangePacketReceive(PuzzleEvent.Database.Database.UserSearch exchangePacketReceive, ref bool IsNotice, ref string PacketName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleEventService/GetPiecesReceive", ReplyAction="http://tempuri.org/IPuzzleEventService/GetPiecesReceiveResponse")]
        System.Collections.Generic.List<PuzzleEvent.Database.Database.PuzzlePieces> GetPiecesReceive(PuzzleEvent.Database.Database.UserSearch searchPiecesReceive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleEventService/AddPuzzleDrawDetails", ReplyAction="http://tempuri.org/IPuzzleEventService/AddPuzzleDrawDetailsResponse")]
        int AddPuzzleDrawDetails(PuzzleEvent.Database.Database.PuzzleDrawDetails puzzleDrawDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleEventService/AddPiecesPacketDetails", ReplyAction="http://tempuri.org/IPuzzleEventService/AddPiecesPacketDetailsResponse")]
        PuzzleEvent.Database.Database.PuzzleDrawDetails AddPiecesPacketDetails(PuzzleEvent.Database.Database.PuzzleDrawDetails piecesPacketDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleEventService/PuzzleDraw", ReplyAction="http://tempuri.org/IPuzzleEventService/PuzzleDrawResponse")]
        System.Collections.Generic.List<PuzzleEvent.Database.Database.PuzzleDrawDetails> PuzzleDraw(PuzzleEvent.Database.Database.PuzzleDrawDetails piecesPacketDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleEventService/GetRankListList", ReplyAction="http://tempuri.org/IPuzzleEventService/GetRankListListResponse")]
        System.Collections.Generic.List<PuzzleEvent.Database.Database.RankList> GetRankListList(ref CommonLibs.Common.DataPage dp, PuzzleEvent.Database.Database.RankList searchRankList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleEventService/GetRedPacket", ReplyAction="http://tempuri.org/IPuzzleEventService/GetRedPacketResponse")]
        int GetRedPacket(long userid, int areaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPuzzleEventService/PuzzleReceive", ReplyAction="http://tempuri.org/IPuzzleEventService/PuzzleReceiveResponse")]
        PuzzleEvent.Database.Database.PuzzleDrawDetails PuzzleReceive(PuzzleEvent.Database.Database.PuzzleDrawDetails PuzzleDrawDetails);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPuzzleEventServiceChannel : PuzzleEvent.DAL.WCF.Client.PuzzleEventService.IPuzzleEventService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PuzzleEventServiceClient : System.ServiceModel.ClientBase<PuzzleEvent.DAL.WCF.Client.PuzzleEventService.IPuzzleEventService>, PuzzleEvent.DAL.WCF.Client.PuzzleEventService.IPuzzleEventService {
        
        public PuzzleEventServiceClient() {
        }
        
        public PuzzleEventServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PuzzleEventServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PuzzleEventServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PuzzleEventServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<PuzzleEvent.Database.Database.UserPiecesTotal> GetUserPiecesTotalAll(PuzzleEvent.Database.Database.UserPiecesTotal userpiecestotal) {
            return base.Channel.GetUserPiecesTotalAll(userpiecestotal);
        }
        
        public int AddOrdinaryPacketReceive(PuzzleEvent.Database.Database.UserSearch ordinaryPacketReceive) {
            return base.Channel.AddOrdinaryPacketReceive(ordinaryPacketReceive);
        }
        
        public int AddExchangePacketReceive(PuzzleEvent.Database.Database.UserSearch exchangePacketReceive, ref bool IsNotice, ref string PacketName) {
            return base.Channel.AddExchangePacketReceive(exchangePacketReceive, ref IsNotice, ref PacketName);
        }
        
        public System.Collections.Generic.List<PuzzleEvent.Database.Database.PuzzlePieces> GetPiecesReceive(PuzzleEvent.Database.Database.UserSearch searchPiecesReceive) {
            return base.Channel.GetPiecesReceive(searchPiecesReceive);
        }
        
        public int AddPuzzleDrawDetails(PuzzleEvent.Database.Database.PuzzleDrawDetails puzzleDrawDetails) {
            return base.Channel.AddPuzzleDrawDetails(puzzleDrawDetails);
        }
        
        public PuzzleEvent.Database.Database.PuzzleDrawDetails AddPiecesPacketDetails(PuzzleEvent.Database.Database.PuzzleDrawDetails piecesPacketDetails) {
            return base.Channel.AddPiecesPacketDetails(piecesPacketDetails);
        }
        
        public System.Collections.Generic.List<PuzzleEvent.Database.Database.PuzzleDrawDetails> PuzzleDraw(PuzzleEvent.Database.Database.PuzzleDrawDetails piecesPacketDetails) {
            return base.Channel.PuzzleDraw(piecesPacketDetails);
        }
        
        public System.Collections.Generic.List<PuzzleEvent.Database.Database.RankList> GetRankListList(ref CommonLibs.Common.DataPage dp, PuzzleEvent.Database.Database.RankList searchRankList) {
            return base.Channel.GetRankListList(ref dp, searchRankList);
        }
        
        public int GetRedPacket(long userid, int areaId) {
            return base.Channel.GetRedPacket(userid, areaId);
        }
        
        public PuzzleEvent.Database.Database.PuzzleDrawDetails PuzzleReceive(PuzzleEvent.Database.Database.PuzzleDrawDetails PuzzleDrawDetails) {
            return base.Channel.PuzzleReceive(PuzzleDrawDetails);
        }
    }
}
