//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CampEvents.DAL.AdminWCF.Client.CampEventsAdminService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CampEventsAdminService.ICampEventsAdminService")]
    public interface ICampEventsAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/UpdateBasicConfig", ReplyAction="http://tempuri.org/ICampEventsAdminService/UpdateBasicConfigResponse")]
        int UpdateBasicConfig(CampEvents.Database.Database.BasicConfig basicConfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetBasicConfigList", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetBasicConfigListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.BasicConfig> GetBasicConfigList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetCampConfigList", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetCampConfigListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.CampConfig> GetCampConfigList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/InsertDailyTaskConfig", ReplyAction="http://tempuri.org/ICampEventsAdminService/InsertDailyTaskConfigResponse")]
        int InsertDailyTaskConfig(CampEvents.Database.Database.DailyTaskConfig dailytaskconfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/UpdateDailyTaskConfig", ReplyAction="http://tempuri.org/ICampEventsAdminService/UpdateDailyTaskConfigResponse")]
        int UpdateDailyTaskConfig(CampEvents.Database.Database.DailyTaskConfig dailytaskconfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/DeleteDailyTaskConfig", ReplyAction="http://tempuri.org/ICampEventsAdminService/DeleteDailyTaskConfigResponse")]
        int DeleteDailyTaskConfig(CampEvents.Database.Database.DailyTaskConfig dailytaskconfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetDailyTaskConfigList", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetDailyTaskConfigListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.DailyTaskConfig> GetDailyTaskConfigList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetGameDailyLogHistoryList", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetGameDailyLogHistoryListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.GameDailyLogHistory> GetGameDailyLogHistoryList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.GameDailyLogHistory searchGameDailyLogHistory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetGameDailyLogList", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetGameDailyLogListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.GameDailyLog> GetGameDailyLogList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.GameDailyLog searchGameDailyLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetPacketQueueLogList", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetPacketQueueLogListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.PacketQueueLog> GetPacketQueueLogList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.PacketQueueLog searchpacketqueuelog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/InsertPacketQueue", ReplyAction="http://tempuri.org/ICampEventsAdminService/InsertPacketQueueResponse")]
        int InsertPacketQueue(CampEvents.Database.Database.PacketQueue packetqueue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/DeletePacketQueue", ReplyAction="http://tempuri.org/ICampEventsAdminService/DeletePacketQueueResponse")]
        int DeletePacketQueue(CampEvents.Database.Database.PacketQueue packetqueue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetPacketQueueList", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetPacketQueueListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.PacketQueue> GetPacketQueueList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.PacketQueue searchPacketQueue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/CalculateFinalPackets", ReplyAction="http://tempuri.org/ICampEventsAdminService/CalculateFinalPacketsResponse")]
        int CalculateFinalPackets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/InsertPointPacketConfig", ReplyAction="http://tempuri.org/ICampEventsAdminService/InsertPointPacketConfigResponse")]
        int InsertPointPacketConfig(CampEvents.Database.Database.PointPacketConfig pointpacketconfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/UpdatePointPacketConfig", ReplyAction="http://tempuri.org/ICampEventsAdminService/UpdatePointPacketConfigResponse")]
        int UpdatePointPacketConfig(CampEvents.Database.Database.PointPacketConfig pointpacketconfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/DeletePointPacketConfig", ReplyAction="http://tempuri.org/ICampEventsAdminService/DeletePointPacketConfigResponse")]
        int DeletePointPacketConfig(CampEvents.Database.Database.PointPacketConfig pointpacketconfig);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetPointPacketConfigsList", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetPointPacketConfigsListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.PointPacketConfig> GetPointPacketConfigsList(ref CommonLibs.Common.DataPage dp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetPointPacketExchangeLogList", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetPointPacketExchangeLogListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.PointPacketExchangeLog> GetPointPacketExchangeLogList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.PointPacketExchangeLog searchPointPacketExchangeLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/InsertRankListTop20", ReplyAction="http://tempuri.org/ICampEventsAdminService/InsertRankListTop20Response")]
        int InsertRankListTop20(CampEvents.Database.Database.RankListTop20 ranklisttop20);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/DeleteRankListTop20", ReplyAction="http://tempuri.org/ICampEventsAdminService/DeleteRankListTop20Response")]
        int DeleteRankListTop20(CampEvents.Database.Database.RankListTop20 ranklisttop20);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetRankListTop20List", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetRankListTop20ListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.RankListTop20> GetRankListTop20List(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.RankListTop20 searchRankListTop20);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/CalculateRankPacket", ReplyAction="http://tempuri.org/ICampEventsAdminService/CalculateRankPacketResponse")]
        int CalculateRankPacket(CampEvents.Database.Database.RankListTop20 rankinfo, int packetid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetUserCampLogList", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetUserCampLogListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.UserCampLog> GetUserCampLogList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.UserCampLog searchUserCampLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/InsertWallet", ReplyAction="http://tempuri.org/ICampEventsAdminService/InsertWalletResponse")]
        int InsertWallet(CampEvents.Database.Database.Wallet wallet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/DeleteWallet", ReplyAction="http://tempuri.org/ICampEventsAdminService/DeleteWalletResponse")]
        int DeleteWallet(CampEvents.Database.Database.Wallet wallet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICampEventsAdminService/GetWalletList", ReplyAction="http://tempuri.org/ICampEventsAdminService/GetWalletListResponse")]
        System.Collections.Generic.List<CampEvents.Database.Database.Wallet> GetWalletList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.Wallet searchwallet);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICampEventsAdminServiceChannel : CampEvents.DAL.AdminWCF.Client.CampEventsAdminService.ICampEventsAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CampEventsAdminServiceClient : System.ServiceModel.ClientBase<CampEvents.DAL.AdminWCF.Client.CampEventsAdminService.ICampEventsAdminService>, CampEvents.DAL.AdminWCF.Client.CampEventsAdminService.ICampEventsAdminService {
        
        public CampEventsAdminServiceClient() {
        }
        
        public CampEventsAdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CampEventsAdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CampEventsAdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CampEventsAdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int UpdateBasicConfig(CampEvents.Database.Database.BasicConfig basicConfig) {
            return base.Channel.UpdateBasicConfig(basicConfig);
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.BasicConfig> GetBasicConfigList() {
            return base.Channel.GetBasicConfigList();
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.CampConfig> GetCampConfigList() {
            return base.Channel.GetCampConfigList();
        }
        
        public int InsertDailyTaskConfig(CampEvents.Database.Database.DailyTaskConfig dailytaskconfig) {
            return base.Channel.InsertDailyTaskConfig(dailytaskconfig);
        }
        
        public int UpdateDailyTaskConfig(CampEvents.Database.Database.DailyTaskConfig dailytaskconfig) {
            return base.Channel.UpdateDailyTaskConfig(dailytaskconfig);
        }
        
        public int DeleteDailyTaskConfig(CampEvents.Database.Database.DailyTaskConfig dailytaskconfig) {
            return base.Channel.DeleteDailyTaskConfig(dailytaskconfig);
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.DailyTaskConfig> GetDailyTaskConfigList() {
            return base.Channel.GetDailyTaskConfigList();
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.GameDailyLogHistory> GetGameDailyLogHistoryList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.GameDailyLogHistory searchGameDailyLogHistory) {
            return base.Channel.GetGameDailyLogHistoryList(ref dp, searchGameDailyLogHistory);
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.GameDailyLog> GetGameDailyLogList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.GameDailyLog searchGameDailyLog) {
            return base.Channel.GetGameDailyLogList(ref dp, searchGameDailyLog);
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.PacketQueueLog> GetPacketQueueLogList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.PacketQueueLog searchpacketqueuelog) {
            return base.Channel.GetPacketQueueLogList(ref dp, searchpacketqueuelog);
        }
        
        public int InsertPacketQueue(CampEvents.Database.Database.PacketQueue packetqueue) {
            return base.Channel.InsertPacketQueue(packetqueue);
        }
        
        public int DeletePacketQueue(CampEvents.Database.Database.PacketQueue packetqueue) {
            return base.Channel.DeletePacketQueue(packetqueue);
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.PacketQueue> GetPacketQueueList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.PacketQueue searchPacketQueue) {
            return base.Channel.GetPacketQueueList(ref dp, searchPacketQueue);
        }
        
        public int CalculateFinalPackets() {
            return base.Channel.CalculateFinalPackets();
        }
        
        public int InsertPointPacketConfig(CampEvents.Database.Database.PointPacketConfig pointpacketconfig) {
            return base.Channel.InsertPointPacketConfig(pointpacketconfig);
        }
        
        public int UpdatePointPacketConfig(CampEvents.Database.Database.PointPacketConfig pointpacketconfig) {
            return base.Channel.UpdatePointPacketConfig(pointpacketconfig);
        }
        
        public int DeletePointPacketConfig(CampEvents.Database.Database.PointPacketConfig pointpacketconfig) {
            return base.Channel.DeletePointPacketConfig(pointpacketconfig);
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.PointPacketConfig> GetPointPacketConfigsList(ref CommonLibs.Common.DataPage dp) {
            return base.Channel.GetPointPacketConfigsList(ref dp);
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.PointPacketExchangeLog> GetPointPacketExchangeLogList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.PointPacketExchangeLog searchPointPacketExchangeLog) {
            return base.Channel.GetPointPacketExchangeLogList(ref dp, searchPointPacketExchangeLog);
        }
        
        public int InsertRankListTop20(CampEvents.Database.Database.RankListTop20 ranklisttop20) {
            return base.Channel.InsertRankListTop20(ranklisttop20);
        }
        
        public int DeleteRankListTop20(CampEvents.Database.Database.RankListTop20 ranklisttop20) {
            return base.Channel.DeleteRankListTop20(ranklisttop20);
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.RankListTop20> GetRankListTop20List(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.RankListTop20 searchRankListTop20) {
            return base.Channel.GetRankListTop20List(ref dp, searchRankListTop20);
        }
        
        public int CalculateRankPacket(CampEvents.Database.Database.RankListTop20 rankinfo, int packetid) {
            return base.Channel.CalculateRankPacket(rankinfo, packetid);
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.UserCampLog> GetUserCampLogList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.UserCampLog searchUserCampLog) {
            return base.Channel.GetUserCampLogList(ref dp, searchUserCampLog);
        }
        
        public int InsertWallet(CampEvents.Database.Database.Wallet wallet) {
            return base.Channel.InsertWallet(wallet);
        }
        
        public int DeleteWallet(CampEvents.Database.Database.Wallet wallet) {
            return base.Channel.DeleteWallet(wallet);
        }
        
        public System.Collections.Generic.List<CampEvents.Database.Database.Wallet> GetWalletList(ref CommonLibs.Common.DataPage dp, CampEvents.Database.Database.Wallet searchwallet) {
            return base.Channel.GetWalletList(ref dp, searchwallet);
        }
    }
}
